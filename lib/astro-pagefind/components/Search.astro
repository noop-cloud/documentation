---
// Temporarily inlined from: https://github.com/shishkin/astro-pagefind
// Need functionality from PR: https://github.com/shishkin/astro-pagefind/pull/58
import "@pagefind/default-ui/css/ui.css";

export interface Props {
  readonly id?: string;
  readonly className?: string;
  readonly query?: string;
  readonly uiOptions?: Record<string, any>;
}

const { id, className, query, uiOptions = {} } = Astro.props as Props;
const { PAGEFIND_OUTPUT_SUBDIR = 'pagefind', PAGEFIND_SITE} = process.env;

const bundlePath = `${import.meta.env.BASE_URL}${PAGEFIND_OUTPUT_SUBDIR}/`;
---

<div
  id={id}
  class:list={[className]}
  data-pagefind-ui
  data-bundle-path={bundlePath}
  data-query={query}
  data-ui-options={JSON.stringify(uiOptions)}
>
</div>
<script>
 import { PagefindUI } from "@pagefind/default-ui";
 window.addEventListener("DOMContentLoaded", () => {
   const allSelector = "[data-pagefind-ui]";
   for (const el of document.querySelectorAll(allSelector)) {
     const elSelector = [
       ...(el.id ? [`#${el.id}`] : []),
       ...[...el.classList.values()].map((c) => `.${c}`),
       allSelector,
     ].join("");
     const bundlePath = el.getAttribute("data-bundle-path");
     const opts = JSON.parse(el.getAttribute("data-ui-options") ?? "{}");
     new PagefindUI({
       ...opts,
       element: elSelector,
       bundlePath,
     });
     const query = el.getAttribute("data-query");
     if (query) {
       const input = el.querySelector<HTMLInputElement>(`input[type="text"]`);
       if (input) {
         input.value = query;
         input.dispatchEvent(new Event("input", { bubbles: true }));
       }
     }
   }
 });
</script>
